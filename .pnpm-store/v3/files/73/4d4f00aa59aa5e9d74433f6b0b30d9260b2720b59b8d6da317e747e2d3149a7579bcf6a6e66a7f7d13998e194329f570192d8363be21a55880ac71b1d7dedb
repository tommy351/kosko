import { register } from "@kubernetes-models/validate";
import { addSchema as IoK8sApiCoreV1TopologySelectorTerm } from "./IoK8sApiCoreV1TopologySelectorTerm.mjs";
import { addSchema as IoK8sApimachineryPkgApisMetaV1ObjectMeta } from "./IoK8sApimachineryPkgApisMetaV1ObjectMeta.mjs";
const schema = {
    "properties": {
        "allowVolumeExpansion": {
            "type": "boolean"
        },
        "allowedTopologies": {
            "items": {
                "$ref": "io.k8s.api.core.v1.TopologySelectorTerm#"
            },
            "type": "array"
        },
        "apiVersion": {
            "type": "string",
            "enum": [
                "storage.k8s.io/v1beta1"
            ]
        },
        "kind": {
            "type": "string",
            "enum": [
                "StorageClass"
            ]
        },
        "metadata": {
            "$ref": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#"
        },
        "mountOptions": {
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "parameters": {
            "additionalProperties": {
                "type": "string"
            },
            "type": "object"
        },
        "provisioner": {
            "type": "string"
        },
        "reclaimPolicy": {
            "type": "string"
        },
        "volumeBindingMode": {
            "type": "string"
        }
    },
    "required": [
        "provisioner",
        "apiVersion",
        "kind"
    ],
    "type": "object"
};
export function addSchema() {
    IoK8sApiCoreV1TopologySelectorTerm();
    IoK8sApimachineryPkgApisMetaV1ObjectMeta();
    register("io.k8s.api.storage.v1beta1.StorageClass", schema);
}
