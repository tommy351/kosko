"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSchema = void 0;
const validate_1 = require("@kubernetes-models/validate");
const IoK8sApimachineryPkgRuntimeRawExtension_1 = require("./IoK8sApimachineryPkgRuntimeRawExtension.js");
const schema = {
    "properties": {
        "object": {
            "$ref": "io.k8s.apimachinery.pkg.runtime.RawExtension#"
        },
        "type": {
            "type": "string"
        },
        "apiVersion": {
            "type": "string",
            "enum": [
                "v1",
                "admission.k8s.io/v1",
                "admission.k8s.io/v1beta1",
                "admissionregistration.k8s.io/v1",
                "admissionregistration.k8s.io/v1beta1",
                "apiextensions.k8s.io/v1",
                "apiextensions.k8s.io/v1beta1",
                "apiregistration.k8s.io/v1",
                "apiregistration.k8s.io/v1beta1",
                "apps/v1",
                "apps/v1beta1",
                "apps/v1beta2",
                "authentication.k8s.io/v1",
                "authentication.k8s.io/v1beta1",
                "authorization.k8s.io/v1",
                "authorization.k8s.io/v1beta1",
                "autoscaling/v1",
                "autoscaling/v2beta1",
                "autoscaling/v2beta2",
                "batch/v1",
                "batch/v1beta1",
                "batch/v2alpha1",
                "certificates.k8s.io/v1",
                "certificates.k8s.io/v1beta1",
                "coordination.k8s.io/v1",
                "coordination.k8s.io/v1beta1",
                "discovery.k8s.io/v1alpha1",
                "discovery.k8s.io/v1beta1",
                "events.k8s.io/v1",
                "events.k8s.io/v1beta1",
                "extensions/v1beta1",
                "flowcontrol.apiserver.k8s.io/v1alpha1",
                "imagepolicy.k8s.io/v1alpha1",
                "networking.k8s.io/v1",
                "networking.k8s.io/v1beta1",
                "node.k8s.io/v1alpha1",
                "node.k8s.io/v1beta1",
                "policy/v1beta1",
                "rbac.authorization.k8s.io/v1",
                "rbac.authorization.k8s.io/v1alpha1",
                "rbac.authorization.k8s.io/v1beta1",
                "scheduling.k8s.io/v1",
                "scheduling.k8s.io/v1alpha1",
                "scheduling.k8s.io/v1beta1",
                "settings.k8s.io/v1alpha1",
                "storage.k8s.io/v1",
                "storage.k8s.io/v1alpha1",
                "storage.k8s.io/v1beta1"
            ]
        },
        "kind": {
            "type": "string",
            "enum": [
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent",
                "WatchEvent"
            ]
        }
    },
    "required": [
        "type",
        "object",
        "apiVersion",
        "kind"
    ],
    "type": "object"
};
function addSchema() {
    IoK8sApimachineryPkgRuntimeRawExtension_1.addSchema();
    validate_1.register("io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent", schema);
}
exports.addSchema = addSchema;
