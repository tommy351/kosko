"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
const tslib_1 = require("tslib");
const child_process_1 = require("child_process");
const path_1 = require("path");
const string_to_stream_1 = tslib_1.__importDefault(require("string-to-stream"));
const WORKER_PATH = path_1.join(__dirname, "worker/entry.js");
async function build({ targets, stdout = "inherit", stderr = "inherit", verbose, watch, clean, projects, cwd, compiler, }) {
    if (!projects.length) {
        throw new Error("At least one project is required");
    }
    if (!targets.length) {
        throw new Error("At least one target is required");
    }
    function runWorker(target) {
        return new Promise((resolve, reject) => {
            const data = {
                target,
                verbose,
                watch,
                clean,
                projects,
                compiler,
                cwd,
            };
            const worker = child_process_1.fork(WORKER_PATH, [], {
                cwd,
                stdio: ["pipe", stdout, stderr, "ipc"],
            });
            if (worker.stdin) {
                string_to_stream_1.default(JSON.stringify(data)).pipe(worker.stdin);
            }
            worker.on("error", reject);
            worker.on("exit", resolve);
        });
    }
    const codes = await Promise.all(targets.map((target) => runWorker(target)));
    return codes.find((code) => code !== 0) || 0;
}
exports.build = build;
//# sourceMappingURL=build.js.map