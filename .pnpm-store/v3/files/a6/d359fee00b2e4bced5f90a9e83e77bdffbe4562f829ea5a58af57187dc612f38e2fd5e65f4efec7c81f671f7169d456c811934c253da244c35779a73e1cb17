import { Model } from "@kubernetes-models/base";
/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 */
export interface IIoK8sApimachineryPkgApisMetaV1OwnerReference {
    /**
     * API version of the referent.
     */
    "apiVersion": string;
    /**
     * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
     */
    "blockOwnerDeletion"?: boolean;
    /**
     * If true, this reference points to the managing controller.
     */
    "controller"?: boolean;
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     */
    "kind": string;
    /**
     * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
     */
    "name": string;
    /**
     * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     */
    "uid": string;
}
/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 */
export declare class IoK8sApimachineryPkgApisMetaV1OwnerReference extends Model<IIoK8sApimachineryPkgApisMetaV1OwnerReference> implements IIoK8sApimachineryPkgApisMetaV1OwnerReference {
    "apiVersion": IIoK8sApimachineryPkgApisMetaV1OwnerReference["apiVersion"];
    "blockOwnerDeletion"?: boolean;
    "controller"?: boolean;
    "kind": IIoK8sApimachineryPkgApisMetaV1OwnerReference["kind"];
    "name": string;
    "uid": string;
}
export { IIoK8sApimachineryPkgApisMetaV1OwnerReference as IOwnerReference, IoK8sApimachineryPkgApisMetaV1OwnerReference as OwnerReference };
